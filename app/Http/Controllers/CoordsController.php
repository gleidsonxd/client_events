<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Http\Requests;

class CoordsController extends Controller
{
	// public function __construct()
 //    {
 //        $this->middleware('auth');
 //    }
 
	public function form()
	{
		
		if (session('logado')!= 1){
		return view("mlogin");
		}
		if (session('adm') == false){
		return view("noadmin");
		}
		 return view('coord_form');
	}
	
	public function create()
	{
	    if (session('logado')!= 1){
		return view("mlogin");
		}
		if (session('adm') == false){
		return view("noadmin");
		}
		$idu = session('id');
		if (isset($idu)){
			$u = "coord[nome]=".$_POST['nome']."&coord[email]=".$_POST['email']."&usuarioid=".$idu;
		}
	   
	    ///echo "$u";
	    
	    $ch = curl_init();

	    curl_setopt($ch, CURLOPT_URL, env('CONSTANT')."/coords");
	    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	    curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_ANY); 
		curl_setopt($ch, CURLOPT_USERPWD, env('USERPWD'));
	    curl_setopt($ch, CURLOPT_POSTFIELDS, "$u");
	    curl_setopt($ch, CURLOPT_POST, 1);

	    $result = curl_exec($ch);
	    if (curl_errno($ch)) {
	        echo 'Error:' . curl_error($ch);
	        return view('coordeors',array('erro'=>"Ocorreu um erro ao criar a Coordenação!"));
	    }
	    if(strpos($result,'Blank')){
	    	return view('coordeors',array('erro'=>"Ocorreu um erro ao criar a Coordenação!"));
	    }elseif(strpos($result,"Error")) {
	    	return view('coordeors',array('erro'=>"Email já cadastrado!"));
	    }elseif(strpos($result,"Criada")) {
	    	return view('coordeors',array('sucesso'=>"Coordenação criada com sucesso!"));
	    }else{
			return view('coordeors',array('erro'=>"Ocorreu um erro ao criar a Coordenação!"));
		}
	    
	    curl_close ($ch);
	    
		
	}

	public function listAll()
	{
		if (session('logado')!= 1){
		return view("mlogin");
		}
		if (session('adm') == false){
		return view("noadmin");
		}
		
		$idu = session('id');
		if (isset($idu)){
			$u = "?usuarioid=".$idu;
		}
	   
	    $ch = curl_init();

	    curl_setopt($ch, CURLOPT_URL, env('CONSTANT')."/coords".$u);
	    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	    curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_ANY); 
		curl_setopt($ch, CURLOPT_USERPWD, env('USERPWD'));
	   
	  //  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");


	    $result = curl_exec($ch);
	   
	    if (curl_errno($ch)) {
	        echo 'Error:' . curl_error($ch);
	    }
	    curl_close ($ch);
	    
		// $pessoas = pessoa::All();
		
		return view('coords', array('result' => $result));
	}

	public function read($id)
	{
		if (session('logado')!= 1){
		return view("mlogin");
		}
		if (session('adm') == false){
		return view("noadmin");
		}
		
		$idu = session('id');
		if (isset($idu)){
			$u = "?usuarioid=".$idu;
		}
	    $ch = curl_init();
	    curl_setopt($ch, CURLOPT_URL, env('CONSTANT')."/coords/".$id.$u);
	    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	    curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_ANY); 
		curl_setopt($ch, CURLOPT_USERPWD, env('USERPWD'));
	    
	    // curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");

		#strpos($result, "Blank")
	    $result = curl_exec($ch);
	   // echo $result;
	    if (curl_errno($ch)) {
	        echo 'Error:' . curl_error($ch);
	    }
		if(strpos($result,"id")){
			return view("coordU", array('result' => $result));
		}else{
			return view('coordeors',array('erro'=>"Coordenação não encontrada!"));
		}
	    curl_close ($ch);
	    
	}

	public function edit()
	{
		if (session('logado')!= 1){
		return view("mlogin");
		}
		if (session('adm') == false){
		return view("noadmin");
		}
		$idu = session('id');
		if (isset($idu)){
			$u = "?usuarioid=".$idu;
		}
		$id = $_POST['coordid'];
		$ch = curl_init();
	    curl_setopt($ch, CURLOPT_URL, env('CONSTANT')."/coords/".$id.$u);
	    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	    curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_ANY); 
		curl_setopt($ch, CURLOPT_USERPWD, env('USERPWD'));
	    
	    //curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");


	    $result = curl_exec($ch);
	   // echo $result;
	    if (curl_errno($ch)) {
	        echo 'Error:' . curl_error($ch);
	    }
	    curl_close ($ch);
	    // $pessoa = pessoa::find($id);
	        return view("coord_edit", array('result' => $result));
	}

	public function update($id)
	{
		if (session('logado')!= 1){
		return view("mlogin");
		}
		if (session('adm') == false){
		return view("noadmin");
		}
		$idu = session('id');
		if (isset($idu)){
			 $u = "coord[nome]=".$_POST['nome']."&coord[email]=".$_POST['email']."&usuarioid=".$idu;
		}
	// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
	    $ch = curl_init();
	    
	    curl_setopt($ch, CURLOPT_URL, env('CONSTANT')."/coords/".$id);
	    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	    curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_ANY); 
		curl_setopt($ch, CURLOPT_USERPWD, env('USERPWD'));
	    curl_setopt($ch, CURLOPT_POSTFIELDS, "$u");
	    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");


	    $result = curl_exec($ch);
	    if (curl_errno($ch)) {
	        echo 'Error:' . curl_error($ch);
	        return view('coordeors',array('erro'=>"Ocorreu um erro ao editar a Coordenação!"));
	    }else{
	    	/*$sucesso = array('sucesso' =>"Coordenação editada com sucesso!");
	    	echo $result;*/
	    	return view('coordeors', array('result' => $result))->with('sucesso', "Coordenação editada com sucesso!");
	    }
	    curl_close ($ch);

	}

	public function delete($id)
	{
	    if (session('logado')!= 1){
		return view("mlogin");
		}
		if (session('adm') == false){
		return view("noadmin");
		}
		$idu = session('id');
		if (isset($idu)){
			$u = "?usuarioid=".$idu;
		}
	    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
	    $ch = curl_init();

	    curl_setopt($ch, CURLOPT_URL, env('CONSTANT')."/coords/".$id.$u);
	    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	    curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_ANY); 
		curl_setopt($ch, CURLOPT_USERPWD, env('USERPWD'));
	    
	    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "DELETE");


	    $result = curl_exec($ch);
	    if (curl_errno($ch)) {
	        echo 'Error:' . curl_error($ch);
	        return view('coordeors',array('erro'=>"Ocorreu um erro ao remover a Coordenação!"));
	    }else{
	    	
	    	return view('coordeors',array('sucesso'=>"Coordenação removida com sucesso!"));
	    }
	    curl_close ($ch);
	    
	}
	
}
